{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/ChatWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/ChatWindow.vue","mtime":1592042493000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from './Header.vue'\nimport MessageList from './MessageList.vue'\nimport UserInput from './UserInput.vue'\nimport UserList from './UserList.vue'\n\nexport default {\n  components: {\n    Header,\n    MessageList,\n    UserInput,\n    UserList\n  },\n  props: {\n    showEmoji: {\n      type: Boolean,\n      default: false\n    },\n    showCloseButton: {\n      type: Boolean,\n      default: true\n    },\n    showFile: {\n      type: Boolean,\n      default: false\n    },\n    participants: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    titleImageUrl: {\n      type: String,\n      default: ''\n    },\n    onUserInputSubmit: {\n      type: Function,\n      required: true\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    messageList: {\n      type: Array,\n      default: () => []\n    },\n    isOpen: {\n      type: Boolean,\n      default: () => false\n    },\n    placeholder: {\n      type: String,\n      default: 'Write a message...'\n    },\n    showTypingIndicator: {\n      type: String,\n      required: true\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    alwaysScrollToBottom: {\n      type: Boolean,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    },\n    disableUserListToggle: {\n      type: Boolean,\n      default: false\n    },\n    showEdition: {\n      type: Boolean,\n      required: true\n    },\n    showDeletion: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showUserList: false\n    }\n  },\n  computed: {\n    messages() {\n      let messages = this.messageList\n\n      return messages\n    }\n  },\n  methods: {\n    handleUserListToggle(showUserList) {\n      this.showUserList = showUserList\n    },\n    getSuggestions(){\n      return this.messages.length > 0 ? this.messages[this.messages.length - 1].suggestions : []\n    }\n  }\n}\n",{"version":3,"sources":["ChatWindow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ChatWindow.vue","sourceRoot":"node_modules/vue-beautiful-chat/src","sourcesContent":["<template>\n  <div class=\"sc-chat-window\" :class=\"{opened: isOpen, closed: !isOpen}\">\n    <Header\n      :showCloseButton=\"showCloseButton\"\n      :title=\"title\"\n      :imageUrl=\"titleImageUrl\"\n      :onClose=\"onClose\"\n      :colors=\"colors\"\n      :disableUserListToggle=\"disableUserListToggle\"\n      @userList=\"handleUserListToggle\"\n    >\n      <template>\n        <slot name=\"header\">\n        </slot>\n      </template>\n    </Header>\n    <UserList\n      v-if=\"showUserList\"\n      :colors=\"colors\"\n      :participants=\"participants\"\n    />\n    <MessageList\n      v-if=\"!showUserList\"\n      :messages=\"messages\"\n      :participants=\"participants\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :showEdition=\"showEdition\"\n      :showDeletion=\"showDeletion\"\n      :messageStyling=\"messageStyling\"\n      @scrollToTop=\"$emit('scrollToTop')\"\n      @remove=\"$emit('remove', $event)\"\n    >\n      <template v-slot:user-avatar=\"scopedProps\">\n        <slot name=\"user-avatar\" :user=\"scopedProps.user\" :message=\"scopedProps.message\">\n        </slot>\n      </template>\n      <template v-slot:text-message-body=\"scopedProps\">\n        <slot name=\"text-message-body\" :message=\"scopedProps.message\" :messageText=\"scopedProps.messageText\" :messageColors=\"scopedProps.messageColors\" :me=\"scopedProps.me\">\n        </slot>\n      </template>\n      <template v-slot:system-message-body=\"scopedProps\">\n        <slot name=\"system-message-body\" :message=\"scopedProps.message\">\n        </slot>\n      </template>\n      <template v-slot:text-message-toolbox=\"scopedProps\">\n        <slot name=\"text-message-toolbox\" :message=\"scopedProps.message\" :me=\"scopedProps.me\">\n        </slot>\n      </template>\n    </MessageList>\n    <UserInput\n      v-if=\"!showUserList\"\n      :showEmoji=\"showEmoji\"\n      :onSubmit=\"onUserInputSubmit\"\n      :suggestions=\"getSuggestions()\"\n      :showFile=\"showFile\"\n      :placeholder=\"placeholder\"\n      @onType=\"$emit('onType')\"\n      @edit=\"$emit('edit', $event)\"\n      :colors=\"colors\" />\n  </div>\n</template>\n\n<script>\nimport Header from './Header.vue'\nimport MessageList from './MessageList.vue'\nimport UserInput from './UserInput.vue'\nimport UserList from './UserList.vue'\n\nexport default {\n  components: {\n    Header,\n    MessageList,\n    UserInput,\n    UserList\n  },\n  props: {\n    showEmoji: {\n      type: Boolean,\n      default: false\n    },\n    showCloseButton: {\n      type: Boolean,\n      default: true\n    },\n    showFile: {\n      type: Boolean,\n      default: false\n    },\n    participants: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    titleImageUrl: {\n      type: String,\n      default: ''\n    },\n    onUserInputSubmit: {\n      type: Function,\n      required: true\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    messageList: {\n      type: Array,\n      default: () => []\n    },\n    isOpen: {\n      type: Boolean,\n      default: () => false\n    },\n    placeholder: {\n      type: String,\n      default: 'Write a message...'\n    },\n    showTypingIndicator: {\n      type: String,\n      required: true\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    alwaysScrollToBottom: {\n      type: Boolean,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    },\n    disableUserListToggle: {\n      type: Boolean,\n      default: false\n    },\n    showEdition: {\n      type: Boolean,\n      required: true\n    },\n    showDeletion: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showUserList: false\n    }\n  },\n  computed: {\n    messages() {\n      let messages = this.messageList\n\n      return messages\n    }\n  },\n  methods: {\n    handleUserListToggle(showUserList) {\n      this.showUserList = showUserList\n    },\n    getSuggestions(){\n      return this.messages.length > 0 ? this.messages[this.messages.length - 1].suggestions : []\n    }\n  }\n}\n</script>\n<style scoped>\n.sc-chat-window {\n  width: 370px;\n  height: calc(100% - 120px);\n  max-height: 590px;\n  position: fixed;\n  right: 25px;\n  bottom: 100px;\n  box-sizing: border-box;\n  box-shadow: 0px 7px 40px 2px rgba(148, 149, 150, 0.1);\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 10px;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  animation: fadeIn;\n  animation-duration: 0.3s;\n  animation-timing-function: ease-in-out;\n}\n\n.sc-chat-window.closed {\n  opacity: 0;\n  display: none;\n  bottom: 90px;\n}\n\n@keyframes fadeIn {\n  0% {\n    display: none;\n    opacity: 0;\n  }\n\n  100% {\n    display: flex;\n    opacity: 1;\n  }\n}\n\n.sc-message--me {\n  text-align: right;\n}\n.sc-message--them {\n  text-align: left;\n}\n\n@media (max-width: 450px) {\n  .sc-chat-window {\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    right: 0px;\n    bottom: 0px;\n    border-radius: 0px;\n  }\n  .sc-chat-window {\n    transition: 0.1s ease-in-out;\n  }\n  .sc-chat-window.closed {\n    bottom: 0px;\n  }\n}\n</style>\n"]}]}