{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js!/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/ChatWindow.vue?vue&type=template&id=353e1b70&scoped=true&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/ChatWindow.vue","mtime":1592042493000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sc-chat-window\",\n      class: { opened: _vm.isOpen, closed: !_vm.isOpen }\n    },\n    [\n      _c(\n        \"Header\",\n        {\n          attrs: {\n            showCloseButton: _vm.showCloseButton,\n            title: _vm.title,\n            imageUrl: _vm.titleImageUrl,\n            onClose: _vm.onClose,\n            colors: _vm.colors,\n            disableUserListToggle: _vm.disableUserListToggle\n          },\n          on: { userList: _vm.handleUserListToggle }\n        },\n        [[_vm._t(\"header\")]],\n        2\n      ),\n      _vm.showUserList\n        ? _c(\"UserList\", {\n            attrs: { colors: _vm.colors, participants: _vm.participants }\n          })\n        : _vm._e(),\n      !_vm.showUserList\n        ? _c(\"MessageList\", {\n            attrs: {\n              messages: _vm.messages,\n              participants: _vm.participants,\n              showTypingIndicator: _vm.showTypingIndicator,\n              colors: _vm.colors,\n              alwaysScrollToBottom: _vm.alwaysScrollToBottom,\n              showEdition: _vm.showEdition,\n              showDeletion: _vm.showDeletion,\n              messageStyling: _vm.messageStyling\n            },\n            on: {\n              scrollToTop: function($event) {\n                return _vm.$emit(\"scrollToTop\")\n              },\n              remove: function($event) {\n                return _vm.$emit(\"remove\", $event)\n              }\n            },\n            scopedSlots: _vm._u(\n              [\n                {\n                  key: \"user-avatar\",\n                  fn: function(scopedProps) {\n                    return [\n                      _vm._t(\"user-avatar\", null, {\n                        user: scopedProps.user,\n                        message: scopedProps.message\n                      })\n                    ]\n                  }\n                },\n                {\n                  key: \"text-message-body\",\n                  fn: function(scopedProps) {\n                    return [\n                      _vm._t(\"text-message-body\", null, {\n                        message: scopedProps.message,\n                        messageText: scopedProps.messageText,\n                        messageColors: scopedProps.messageColors,\n                        me: scopedProps.me\n                      })\n                    ]\n                  }\n                },\n                {\n                  key: \"system-message-body\",\n                  fn: function(scopedProps) {\n                    return [\n                      _vm._t(\"system-message-body\", null, {\n                        message: scopedProps.message\n                      })\n                    ]\n                  }\n                },\n                {\n                  key: \"text-message-toolbox\",\n                  fn: function(scopedProps) {\n                    return [\n                      _vm._t(\"text-message-toolbox\", null, {\n                        message: scopedProps.message,\n                        me: scopedProps.me\n                      })\n                    ]\n                  }\n                }\n              ],\n              null,\n              true\n            )\n          })\n        : _vm._e(),\n      !_vm.showUserList\n        ? _c(\"UserInput\", {\n            attrs: {\n              showEmoji: _vm.showEmoji,\n              onSubmit: _vm.onUserInputSubmit,\n              suggestions: _vm.getSuggestions(),\n              showFile: _vm.showFile,\n              placeholder: _vm.placeholder,\n              colors: _vm.colors\n            },\n            on: {\n              onType: function($event) {\n                return _vm.$emit(\"onType\")\n              },\n              edit: function($event) {\n                return _vm.$emit(\"edit\", $event)\n              }\n            }\n          })\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}