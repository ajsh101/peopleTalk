{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/src/components/User/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/src/components/User/ResetPassword.vue","mtime":1571320166796},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: vm => ({\n    show: false,\n    valid: true,\n    show1: false,\n    User: {\n      name: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    nameRules: [\n      v => !!v || \"Name is required\"\n      //v => (v && v.length <= 10) || 'Name must be less than 10 characters'\n    ],\n    passwordRules: [v => !!v || \"Password is required.\"],\n    confirmPasswordRules: [\n      v => !!v || \"Password is required\",\n      v => (v && v.length >= 6) || \"Minimum characters in password must be 6.\",\n      confirmPassword =>\n        confirmPassword === vm.User.password || \"Password must match.\"\n    ]\n  }),\n  props: {\n    source: String\n  },\n  methods: {\n    submit() {\n      if (this.$refs.form.validate()) {\n        // Native form submission is not yet supported\n        const newPassword = {\n          username: this.User.name,\n          password: this.User.password\n        };\n        //console.log(typeof newUser);\n        this.$store.dispatch(\"newPassword\", newPassword);\n      }\n    },\n    onDismissed() {\n      console.log(\"Dismissed Alert\");\n      this.$store.dispatch(\"clearError\");\n    },\n    onClose() {\n      this.$store.dispatch(\"clearNotification\");\n      //this.$router.push(\"/login\");\n    },\n    onHit() {\n      console.log(\"Dismissed Alert\");\n      this.$store.dispatch(\"clearError\");\n    }\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user;\n    },\n    error() {\n      return this.$store.getters.error;\n    }\n  },\n  watch: {\n    user(value) {\n      if (value) {\n        this.show = true;\n        this.$store.dispatch(\"unsetUser\");\n        this.$router.push(\"/login\");\n      }\n    }\n  }\n};\n",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPassword.vue","sourceRoot":"src/components/User","sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-content>\n      <v-container class=\"pa-0 ml-5\">\n        <v-layout v-if=\"error\" row justify-center>\n          <v-flex xs12 sm8 md4 v-if=\"error\">\n            <div class=\"text-xs-center\">\n              <login-alert-error @invalidLogin=\"onHit\"></login-alert-error>\n            </div>\n          </v-flex>\n        </v-layout>\n      </v-container>\n      <v-container fluid class=\"pa-0 ma-0\">\n        <v-layout row justify-center>\n          <div></div>\n          <v-flex xs12 sm8 md4>\n            <v-card class=\"elevation-12\">\n              <v-card-text>\n                <v-form\n                  ref=\"form\"\n                  @submit.prevent=\"submit\"\n                  v-model=\"valid\"\n                  lazy-validation\n                >\n                  <h2 class=\"ma-0 pl-3 headline primary--text\">\n                    Reset Password\n                  </h2>\n                  <v-text-field\n                    v-model=\"User.name\"\n                    :rules=\"nameRules\"\n                    prepend-icon=\"person\"\n                    name=\"login\"\n                    label=\"Username or email\"\n                    type=\"text\"\n                    required\n                  ></v-text-field>\n                  <v-text-field\n                    v-model=\"User.password\"\n                    :rules=\"passwordRules\"\n                    id=\"password\"\n                    prepend-icon=\"lock\"\n                    name=\"password\"\n                    label=\"Enter new Password\"\n                    :append-icon=\"show1 ? 'visibility_off' : 'visibility'\"\n                    :type=\"show1 ? 'text' : 'password'\"\n                    @click:append=\"show1 = !show1\"\n                    required\n                  >\n                  </v-text-field>\n                  <v-text-field\n                    v-model=\"User.confirmPassword\"\n                    :rules=\"confirmPasswordRules\"\n                    id=\"confirm_password\"\n                    prepend-icon=\"lock\"\n                    name=\"confirm_password\"\n                    label=\"Confirm Password\"\n                    :append-icon=\"show1 ? 'visibility_off' : 'visibility'\"\n                    :type=\"show1 ? 'text' : 'password'\"\n                    @click:append=\"show1 = !show1\"\n                    required\n                  >\n                  </v-text-field>\n                </v-form>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                  :disabled=\"!valid\"\n                  class=\"subheading text-capitalize\"\n                  @click=\"submit\"\n                  color=\"primary\"\n                  >Change Paasword\n                  <app-loading></app-loading>\n                  <pass-changed\n                    v-model=\"show\"\n                    @closeNotification=\"onClose\"\n                  ></pass-changed>\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data: vm => ({\n    show: false,\n    valid: true,\n    show1: false,\n    User: {\n      name: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    nameRules: [\n      v => !!v || \"Name is required\"\n      //v => (v && v.length <= 10) || 'Name must be less than 10 characters'\n    ],\n    passwordRules: [v => !!v || \"Password is required.\"],\n    confirmPasswordRules: [\n      v => !!v || \"Password is required\",\n      v => (v && v.length >= 6) || \"Minimum characters in password must be 6.\",\n      confirmPassword =>\n        confirmPassword === vm.User.password || \"Password must match.\"\n    ]\n  }),\n  props: {\n    source: String\n  },\n  methods: {\n    submit() {\n      if (this.$refs.form.validate()) {\n        // Native form submission is not yet supported\n        const newPassword = {\n          username: this.User.name,\n          password: this.User.password\n        };\n        //console.log(typeof newUser);\n        this.$store.dispatch(\"newPassword\", newPassword);\n      }\n    },\n    onDismissed() {\n      console.log(\"Dismissed Alert\");\n      this.$store.dispatch(\"clearError\");\n    },\n    onClose() {\n      this.$store.dispatch(\"clearNotification\");\n      //this.$router.push(\"/login\");\n    },\n    onHit() {\n      console.log(\"Dismissed Alert\");\n      this.$store.dispatch(\"clearError\");\n    }\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user;\n    },\n    error() {\n      return this.$store.getters.error;\n    }\n  },\n  watch: {\n    user(value) {\n      if (value) {\n        this.show = true;\n        this.$store.dispatch(\"unsetUser\");\n        this.$router.push(\"/login\");\n      }\n    }\n  }\n};\n</script>\n"]}]}