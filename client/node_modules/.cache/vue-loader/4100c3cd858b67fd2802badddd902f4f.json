{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js!/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/Message.vue?vue&type=template&id=6983a9af&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/Message.vue","mtime":1592040392000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"sc-message\" }, [\n    _c(\n      \"div\",\n      {\n        staticClass: \"sc-message--content\",\n        class: {\n          sent: _vm.message.author === \"me\",\n          received:\n            _vm.message.author !== \"me\" && _vm.message.type !== \"system\",\n          system: _vm.message.type === \"system\"\n        }\n      },\n      [\n        _vm._t(\n          \"user-avatar\",\n          [\n            _vm.message.type !== \"system\" &&\n            _vm.authorName &&\n            _vm.authorName !== \"me\"\n              ? _c(\"div\", {\n                  directives: [\n                    {\n                      name: \"tooltip\",\n                      rawName: \"v-tooltip\",\n                      value: _vm.authorName,\n                      expression: \"authorName\"\n                    }\n                  ],\n                  staticClass: \"sc-message--avatar\",\n                  style: {\n                    backgroundImage: \"url(\" + _vm.chatImageUrl + \")\"\n                  },\n                  attrs: { title: _vm.authorName }\n                })\n              : _vm._e()\n          ],\n          { message: _vm.message, user: _vm.user }\n        ),\n        _vm.message.type === \"text\"\n          ? _c(\"TextMessage\", {\n              attrs: {\n                message: _vm.message,\n                messageColors: _vm.messageColors,\n                messageStyling: _vm.messageStyling,\n                showEdition: _vm.showEdition,\n                showDeletion: _vm.showDeletion\n              },\n              on: {\n                remove: function($event) {\n                  return _vm.$emit(\"remove\")\n                }\n              },\n              scopedSlots: _vm._u(\n                [\n                  {\n                    key: \"default\",\n                    fn: function(scopedProps) {\n                      return [\n                        _vm._t(\"text-message-body\", null, {\n                          message: scopedProps.message,\n                          messageText: scopedProps.messageText,\n                          messageColors: scopedProps.messageColors,\n                          me: scopedProps.me\n                        })\n                      ]\n                    }\n                  },\n                  {\n                    key: \"text-message-toolbox\",\n                    fn: function(scopedProps) {\n                      return [\n                        _vm._t(\"text-message-toolbox\", null, {\n                          message: scopedProps.message,\n                          me: scopedProps.me\n                        })\n                      ]\n                    }\n                  }\n                ],\n                null,\n                true\n              )\n            })\n          : _vm.message.type === \"emoji\"\n          ? _c(\"EmojiMessage\", { attrs: { data: _vm.message.data } })\n          : _vm.message.type === \"file\"\n          ? _c(\"FileMessage\", {\n              attrs: {\n                data: _vm.message.data,\n                messageColors: _vm.messageColors\n              }\n            })\n          : _vm.message.type === \"typing\"\n          ? _c(\"TypingMessage\", { attrs: { messageColors: _vm.messageColors } })\n          : _vm.message.type === \"system\"\n          ? _c(\n              \"SystemMessage\",\n              {\n                attrs: {\n                  data: _vm.message.data,\n                  messageColors: _vm.messageColors\n                }\n              },\n              [\n                _vm._t(\"system-message-body\", null, {\n                  message: _vm.message.data\n                })\n              ],\n              2\n            )\n          : _vm._e()\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}