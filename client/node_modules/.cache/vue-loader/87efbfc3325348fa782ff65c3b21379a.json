{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js!/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/messages/TextMessage.vue?vue&type=template&id=72ed87c2&scoped=true&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-beautiful-chat/src/messages/TextMessage.vue","mtime":1592039906000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sc-message--text\", style: _vm.messageColors },\n    [\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"sc-message--toolbox\",\n            style: { background: _vm.messageColors.backgroundColor }\n          },\n          [\n            _vm.showEdition &&\n            _vm.me &&\n            _vm.message.id != null &&\n            _vm.message.id != undefined\n              ? _c(\n                  \"button\",\n                  {\n                    attrs: { disabled: _vm.isEditing },\n                    on: { click: _vm.edit }\n                  },\n                  [\n                    _c(\n                      \"icon-base\",\n                      {\n                        attrs: {\n                          color: _vm.isEditing\n                            ? \"black\"\n                            : _vm.messageColors.color,\n                          width: \"10\",\n                          \"icon-name\": \"edit\"\n                        }\n                      },\n                      [_c(\"icon-edit\")],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.showDeletion &&\n            _vm.me &&\n            _vm.message.id != null &&\n            _vm.message.id != undefined\n              ? _c(\n                  \"button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        return _vm.$emit(\"remove\")\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"icon-base\",\n                      {\n                        attrs: {\n                          color: _vm.messageColors.color,\n                          width: \"10\",\n                          \"icon-name\": \"remove\"\n                        }\n                      },\n                      [_c(\"icon-cross\")],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._t(\"text-message-toolbox\", null, {\n              message: _vm.message,\n              me: _vm.me\n            })\n          ],\n          2\n        )\n      ],\n      _vm._t(\n        \"default\",\n        [\n          _c(\"p\", {\n            staticClass: \"sc-message--text-content\",\n            domProps: { innerHTML: _vm._s(_vm.messageText) }\n          }),\n          _vm.message.data.meta\n            ? _c(\n                \"p\",\n                {\n                  staticClass: \"sc-message--meta\",\n                  style: { color: _vm.messageColors.color }\n                },\n                [_vm._v(_vm._s(_vm.message.data.meta))]\n              )\n            : _vm._e(),\n          _vm.message.isEdited\n            ? _c(\n                \"p\",\n                { staticClass: \"sc-message--edited\" },\n                [\n                  _c(\n                    \"icon-base\",\n                    { attrs: { width: \"10\", \"icon-name\": \"edited\" } },\n                    [_c(\"icon-edit\")],\n                    1\n                  ),\n                  _vm._v(\" edited\\n    \")\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        {\n          message: _vm.message,\n          messageText: _vm.messageText,\n          messageColors: _vm.messageColors,\n          me: _vm.me\n        }\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}