{"remainingRequest":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user101/Desktop/peopleTalk/client/src/components/App/ChatRoom.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/user101/Desktop/peopleTalk/client/src/components/App/ChatRoom.vue","mtime":1593704113865},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/peopleTalk/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.v-card--reveal {\n  align-items: center;\n  bottom: 0;\n  justify-content: center;\n  opacity: 0.8;\n  position: absolute;\n  width: 100%;\n}\n\n.chat {\n  width: 800px;\n}\n\n.bubble {\n  background-color: #ffffff;\n  border-radius: 2px;\n  box-shadow: 0 0 6px #ffffff;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n}\n\n.bubble::before {\n  background-color: #ffffff;\n  content: \"\\00a0\";\n  display: block;\n  height: 16px;\n  position: absolute;\n  top: 11px;\n  transform: rotate(29deg) skew(-35deg);\n  -moz-transform: rotate(29deg) skew(-35deg);\n  -ms-transform: rotate(29deg) skew(-35deg);\n  -o-transform: rotate(29deg) skew(-35deg);\n  -webkit-transform: rotate(29deg) skew(-35deg);\n  width: 20px;\n}\n\n.me {\n  background-color: #3949ab;\n  float: left;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  margin: 5px 45px 5px 20px;\n}\n\n.me::before {\n  background-color: #3949ab;\n  box-shadow: -2px 2px 2px 0 rgba(255, 255, 255, 0.425);\n  left: -9px;\n}\n\n.you {\n  float: right;\n  margin: 5px 20px 5px 45px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.you::before {\n  box-shadow: 2px -2px 2px 0 rgba(253, 253, 255, 0.411);\n  right: -9px;\n}\n\n#draggable-container {\n  position: absolute;\n  z-index: 9;\n}\n#draggable-header {\n  z-index: 10;\n}\n\n\n",{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8hCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatRoom.vue","sourceRoot":"src/components/App","sourcesContent":["<template>\n  <v-app id=\"keep\" style=\"background: #eee;\">\n    <v-container grid-list-md text-xs-center style=\"background: #eee;\">\n      <v-layout column align-stretch>\n        <!--chatWin v-if=\"privateWin\"></chatWin-->\n        <!--chatWin></chatWin-->\n        <v-dialog persistent overlay-opacity=\"100\" v-model=\"privateWin\" hide-overlay>\n          <div ref=\"draggableContainer\" id=\"draggable-container\">\n            <div id=\"draggable-header\" @mousedown=\"dragMouseDown\">\n              <slot name=\"header\">\n                <v-system-bar color=\"indigo\" window>\n                  <v-icon>mdi-message</v-icon>\n                  <span>10 unread messages</span>\n                  <v-spacer></v-spacer>\n                  <v-icon>mdi-minus</v-icon>\n                  <v-btn class=\"ma-0\" small right text color=\"white\" v-on:click=\"privateWinToggle\">\n                    <v-icon right dark dense color=\"white\">mdi-close</v-icon>\n                  </v-btn>\n                </v-system-bar>\n              </slot>\n            </div>\n            <slot name=\"main\">\n              <v-card\n                class=\"ma-0\"\n                width=\"600\"\n                height=\"400\"\n                color=\"white\"\n                style=\"position: relative\"\n              >\n                <v-row no-gutters>\n                  <v-col cols=\"12\" sm=\"6\" md=\"8\">\n                    <v-card v-if=\"friendInPrivateClicked\" flat max-width=\"444\" class=\"mx-auto\">\n                      <template v-for=\"(message, index) in messages\">\n                        <div :key=\"index\">\n                          <v-flex\n                            xs10\n                            v-if=\"userName === message.user\"\n                            class=\"chat\"\n                            style=\"display: inline-block;\"\n                          >\n                            <v-layout wrap justify-start>\n                              <div\n                                class=\"bubble me mt-2 mb-2 white--text font-weight-normal\"\n                                style=\"font-size: 15px;\"\n                              >{{ message.text }}</div>\n                            </v-layout>\n                          </v-flex>\n                          <v-layout v-else wrap justify-end>\n                            <v-flex xs10 class=\"chat\" style=\"display: inline-block;\">\n                              <div class=\"bubble you mr-0 mt-2 mb-2\">\n                                <span class=\"ma-0 pa-0 font-weight-light\" style=\"float:right;\">\n                                  <i>@{{ message.user }}</i>\n                                </span>\n                                <br />\n                                <span\n                                  class=\"ma-0 pa-0 font-weight-normal\"\n                                  style=\"float:left; font-size: 15px;\"\n                                >{{ message.text }}</span>\n                              </div>\n                            </v-flex>\n                            <v-avatar class=\"ml-4 mr-2\" size=\"35\">\n                              <img :src=\"message.userImage\" />\n                            </v-avatar>\n                          </v-layout>\n                        </div>\n                      </template>\n                      <v-text-field\n                        class=\"ma-o pa-0\"\n                        v-model=\"userInputPrivateMsg\"\n                        dense\n                        solo\n                        outlined\n                        placeholder=\"Type a message..\"\n                        prepend-inner-icon=\"fa-pencil-alt\"\n                        label=\"Message\"\n                        clearable\n                        autofocus\n                        v-on:keyup.enter=\"send\"\n                      ></v-text-field>\n                    </v-card>\n                    <v-card v-if=\"friendInPrivateNotClicked\" flat max-width=\"444\" class=\"mx-auto\">\n                      <v-carousel\n                        continuous\n                        cycle\n                        :show-arrows=\"false\"\n                        hide-delimiter-background\n                        delimiter-icon=\"mdi-minus\"\n                        height=\"312\"\n                      >\n                        <v-carousel-item v-for=\"(slide, i) in slides\" :key=\"i\" :src=\"slide.src\">\n                          <v-sheet :color=\"colors[i]\" height=\"100%\" tile>\n                            <v-row class=\"fill-height\" align=\"center\" justify=\"center\">\n                              <v-icon class=\"red\">mdi-rocket-launch</v-icon>\n                            </v-row>\n                          </v-sheet>\n                        </v-carousel-item>\n                      </v-carousel>\n                      <h2\n                        class=\"ml-5 justify-center font-weight-light\"\n                      >Click on friend name to send message.</h2>\n                    </v-card>\n                  </v-col>\n                  <v-col cols=\"6\" md=\"4\">\n                    <v-card class=\"pa-2 ma-0\" tile>\n                      <v-list height=\"384\">\n                        <v-subheader>Messages</v-subheader>\n                        <v-divider></v-divider>\n                        <v-list-item-group v-model=\"item\" color=\"primary\">\n                          <v-list-item\n                            v-for=\"(item, i) in addedFriends\"\n                            :key=\"i\"\n                            v-on:click=\"fetchPrivate\"\n                          >\n                            <v-list-item-avatar v-if=\"avatar\" class=\"ma-2\">\n                              <v-img :src=\"item.friendPic\"></v-img>\n                            </v-list-item-avatar>\n                            <v-list-item-content>\n                              <v-list-item-title v-text=\"item.friendName\"></v-list-item-title>\n                            </v-list-item-content>\n                          </v-list-item>\n                        </v-list-item-group>\n                      </v-list>\n                    </v-card>\n                  </v-col>\n                </v-row>\n              </v-card>\n            </slot>\n            <slot name=\"footer\"></slot>\n          </div>\n        </v-dialog>\n\n        <v-tooltip left color=\"primary\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn\n              class=\"ma-5\"\n              v-on=\"on\"\n              right\n              small\n              bottom\n              fab\n              color=\"green\"\n              fixed\n              v-on:click=\"listFriends\"\n            >\n              <v-badge>\n                <template v-slot:badge>0</template>\n                <v-icon>mdi-email</v-icon>\n              </v-badge>\n            </v-btn>\n          </template>\n\n          <span text--color=\"red\">Exit</span>\n        </v-tooltip>\n        <v-navigation-drawer v-model=\"drawer\" app color=\"white\" permanent floating>\n          <v-list dense nav class=\"py-0\">\n            <v-img\n              class=\"ma-2 portrait\"\n              :aspect-ratio=\"1\"\n              v-if=\"ownerImage != null\"\n              :src=\"ownerImage\"\n            ></v-img>\n            <v-list-item two-line>\n              <v-list-item-content>\n                <v-list-item-title>\n                  <div class=\"headline font-weight-regular\">{{ roomOwner }}</div>\n                </v-list-item-title>\n                <v-list-item-subtitle>\n                  <div class=\"subheading font-italic\">@{{ roomName }}</div>\n                </v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n\n            <v-divider></v-divider>\n          </v-list>\n          <div class=\"ma-3 title font-weight-light\">Room Members</div>\n\n          <v-menu absolute offset-y style=\"max-width: 600px\">\n            <template v-slot:activator=\"{ on }\">\n              <template v-for=\"(item, index) in connectedUsers\">\n                <v-divider v-if=\"item.divider\" :key=\"index\" :inset=\"item.inset\"></v-divider>\n\n                <v-list-item\n                  v-else\n                  :key=\"index\"\n                  v-on=\"on\"\n                  @click=\"userOption(item.usrname, item.userId)\"\n                >\n                  <v-list-item-avatar>\n                    <img :src=\"item.avatar\" />\n                  </v-list-item-avatar>\n                  <v-list-item-content>\n                    <v-list-item-title>{{ item.usrname }}</v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </template>\n            </template>\n\n            <v-list v-if=\"memberChoice != null\">\n              <v-list-item\n                v-for=\"(element, i) in memberChoice\"\n                :key=\"i\"\n                @click=\"userChoose(element.title)\"\n              >\n                <v-list-item-title>{{ element.title }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-navigation-drawer>\n      </v-layout>\n      <template v-for=\"(message, index) in messages\">\n        <div :key=\"index\">\n          <v-flex xs10 v-if=\"userName === message.user\" class=\"chat\" style=\"display: inline-block;\">\n            <v-layout wrap justify-start>\n              <div\n                class=\"bubble me mt-2 mb-2 white--text font-weight-normal\"\n                style=\"font-size: 15px;\"\n              >{{ message.text }}</div>\n            </v-layout>\n          </v-flex>\n          <v-layout v-else wrap justify-end>\n            <v-flex xs10 class=\"chat\" style=\"display: inline-block;\">\n              <div class=\"bubble you mr-0 mt-2 mb-2\">\n                <span class=\"ma-0 pa-0 font-weight-light\" style=\"float:right;\">\n                  <i>@{{ message.user }}</i>\n                </span>\n                <br />\n                <span\n                  class=\"ma-0 pa-0 font-weight-normal\"\n                  style=\"float:left; font-size: 15px;\"\n                >{{ message.text }}</span>\n              </div>\n            </v-flex>\n            <v-avatar class=\"ml-4 mr-2\" size=\"35\">\n              <img :src=\"message.userImage\" />\n            </v-avatar>\n          </v-layout>\n        </div>\n      </template>\n    </v-container>\n\n    <v-tooltip bottom color=\"pink\">\n      <template v-slot:activator=\"{ on }\">\n        <v-btn class=\"mt-6\" v-on=\"on\" right small fab color=\"primary\" fixed v-on:click=\"leaveRoom\">\n          <v-icon>close</v-icon>\n        </v-btn>\n      </template>\n\n      <span text--color=\"red\">Exit</span>\n    </v-tooltip>\n\n    <v-dialog v-model=\"dialogOwnerProfile\" max-width=\"300\">\n      <v-hover>\n        <v-card slot-scope=\"{ hover }\" class=\"mx-auto\" color=\"grey lighten-4\" max-width=\"600\">\n          <v-img v-if=\"ownerImage != null\" :src=\"ownerImage\" :aspect-ratio=\"1\">\n            <v-expand-transition>\n              <div\n                v-if=\"hover\"\n                class=\"d-flex transition-fast-in-fast-out blue darken-2 v-card--reveal subheading white--text\"\n                style=\"height: 100%;\"\n              >\n                <div class=\"ma-2 pa-4\">{{ ownerSign }}</div>\n              </div>\n            </v-expand-transition>\n          </v-img>\n          <v-card-text class=\"pt-4\" style=\"position: relative;\">\n            <v-btn\n              v-if=\"alreadyFriend\"\n              absolute\n              color=\"success\"\n              class=\"white--text\"\n              fab\n              right\n              top\n              v-on:click=\"addFriend\"\n            >\n              <v-icon>fa-user-friends</v-icon>\n            </v-btn>\n            <v-btn v-else absolute color=\"blue\" class=\"white--text\" small fab right top>\n              <v-icon>chat</v-icon>\n            </v-btn>\n            <h3 class=\"display-1 text-xs-center font-weight-light orange--text mb-2\">{{ roomOwner }}</h3>\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-dialog>\n\n    <v-dialog v-model=\"dialogUserProfile\" max-width=\"300\">\n      <v-hover>\n        <v-card slot-scope=\"{ hover }\" class=\"mx-auto\" color=\"grey lighten-4\" max-width=\"600\">\n          <v-img v-if=\"userImage != null\" :src=\"userImage\" :aspect-ratio=\"1\">\n            <v-expand-transition>\n              <div\n                v-if=\"hover\"\n                class=\"d-flex transition-fast-in-fast-out blue darken-2 v-card--reveal subheading white--text\"\n                style=\"height: 100%;\"\n              >\n                <div class=\"ma-2 pa-4\">{{ userSign }}</div>\n              </div>\n            </v-expand-transition>\n          </v-img>\n          <v-card-text class=\"pt-4\" style=\"position: relative;\">\n            <v-btn\n              v-if=\"alreadyFriend\"\n              absolute\n              color=\"success\"\n              class=\"white--text\"\n              fab\n              right\n              top\n              v-on:click=\"addFriend\"\n            >\n              <v-icon>fa-user-friends</v-icon>\n            </v-btn>\n            <v-btn v-else absolute color=\"blue\" class=\"white--text\" small fab right top>\n              <v-icon>chat</v-icon>\n            </v-btn>\n            <h3\n              class=\"display-1 text-xs-center font-weight-light orange--text mb-2\"\n            >{{ userNameProfile }}</h3>\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-dialog>\n\n    <v-dialog v-model=\"newFriendAdd\" max-width=\"290\">\n      <v-card class=\"mx-auto\" max-width=\"400\">\n        <v-card-title>\n          <v-img class=\"elevation-6\" v-if=\"ifriendPic != null\" :src=\"ifriendPic\"></v-img>\n        </v-card-title>\n\n        <v-card-text\n          class=\"pt-0 pb-0 font-weight-light primary--text headline text-sm-center\"\n        >{{ ifriendName }}</v-card-text>\n\n        <v-card-text class=\"pt-0 font-weight-light title\">want to add you as a friend.</v-card-text>\n\n        <v-card-actions>\n          <v-btn v-on:click=\"newFriendAdd = false\" dark block class=\"red accent-4\">Cancel</v-btn>\n          <v-btn v-on:click=\"acceptFriend\" dark block class=\"green darken-4\">Add Friend</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-footer id=\"container\" class=\"transparent justify-center mb-0\" inset app fixed height=\"70\">\n      <v-spacer></v-spacer>\n      <v-flex>\n        <v-text-field\n          v-model=\"userInputMsg\"\n          class=\"hidden-sm-and-down\"\n          placeholder=\"Type a message..\"\n          prepend-inner-icon=\"fa-pencil-alt\"\n          label=\"Message\"\n          append-outer-icon=\"send\"\n          solo\n          background-color=\"white\"\n          clearable\n          autofocus\n          v-on:keyup.enter=\"send\"\n          @click:append-outer=\"send\"\n        ></v-text-field>\n      </v-flex>\n      <v-spacer></v-spacer>\n    </v-footer>\n  </v-app>\n</template>\n\n<script>\n//const _ = require(\"underscore\");\n//import chatWindow from \"@/components/App/chatWindow.vue\";\nimport VueDragResize from \"vue-drag-resize\";\nexport default {\n  name: \"DraggableDiv\",\n  components: {\n    //chatWin: chatWindow\n    VueDragResize\n  },\n  data: function() {\n    return {\n      io: null,\n      socket: null,\n      uID: null,\n      userKicked: null,\n      userName: null,\n      userNameProfile: null,\n      userImage: null,\n      userSign: null,\n      ownerSign: null,\n      ownerImage: null,\n      dialogUserProfile: false,\n      dialogOwnerProfile: false,\n      drawer: true,\n      roomOwner: null,\n      chattyUser: false,\n      isRoomOwner: false,\n      roomName: null,\n      newFriendAdd: false,\n      ifriendPic: null,\n      ifriendName: null,\n      friendId: null,\n      requestingUser: null,\n      alreadyFriend: false,\n      socketId: null,\n      listWidth: 400,\n      listHeight: 500,\n      offsetTop: 0,\n\n      item: 5,\n      dense: true,\n      nav: true,\n      avatar: true,\n      dialog: false,\n      privateWin: false,\n      addedFriends: [],\n      right: null,\n      //chatHistory: false,\n      //itemsFriendsListPrivateWin: [],\n      chatMessages: [],\n      userInputMsg: \"\",\n      userInputPrivateMsg: \"\",\n      sendPrivateMsg: true, //need to be applied\n      friendInPrivateClicked: false,\n      friendInPrivateNotClicked: true,\n      memberChoice: [{ title: \"Profile\" }, { title: \"Block\" }],\n      message: {\n        type: \"\",\n        action: \"\",\n        user: \"\",\n        text: \"\", //actual chat message\n        timestamp: \"\"\n      },\n      privateMessage: {\n        type: \"\",\n        action: \"\",\n        user: \"\",\n        text: \"\", //actual chat message\n        timestamp: \"\"\n      },\n      userTyping: [],\n      messages: [],\n      connectedUsers: [],\n      showMenu: false,\n      items: [\n        { title: \"Click Me\" },\n        { title: \"Click Me\" },\n        { title: \"Click Me\" },\n        { title: \"Click Me 2\" }\n      ],\n\n      positions: {\n        clientX: undefined,\n        clientY: undefined,\n        movementX: 0,\n        movementY: 0\n      },\n      colors: [\"transparent\"],\n      slides: [\n        {\n          src: require(\"@/assets/peopleTalk.jpg\")\n        }\n      ]\n    };\n  },\n  created: function() {\n    this.io = require(\"socket.io-client\");\n    this.socket = this.io(\"http://localhost:3000/chatRoom\");\n\n    this.socket.on(\n      \"connect\",\n      function() {\n        this.socketId = this.socket.id;\n        //console.log(this.socketId);\n        console.log(this.$store.getters.user.userId);\n        this.socket.emit(\"roomSocket\", {\n          socketId: this.socketId,\n          userId: this.$store.getters.user.userId\n        });\n        console.log(this.$store.getters.user.userId);\n        console.log(\n          \"Connected to server., ready to create rooms.. :  \" + this.socket.id\n        );\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"isRoomOwner\",\n      function(data) {\n        this.isRoomOwner = data;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"isOwnerOfRoom\",\n      function(data) {\n        this.roomName = data.roomName;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"roomData\",\n      function(roomInfo) {\n        console.log(\"####INSIDE ROOMDATA SOCKET#####\");\n        console.log(roomInfo.roomName);\n        //this.roomName = roomInfo.roomName;\n        console.log(\"####INSIDE ROOMDATA SOCKET#####\");\n        console.log(roomInfo.roomName);\n        this.socket.emit(\"insideRoom\", roomInfo.roomName);\n        this.socket.emit(\"roomJoin\", {\n          roomName: roomInfo.roomName,\n          user: roomInfo.user\n        });\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerImage\",\n      function(ownerImage) {\n        this.ownerImage = ownerImage;\n        this.socket.emit(\"ownerPic\", ownerImage);\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerPic\",\n      function(ownerImage) {\n        this.ownerImage = ownerImage;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerImageUpdate\",\n      function(ownerImage) {\n        this.socket.emit(\"ownerImageUpdate\", ownerImage);\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerPicUpdate\",\n      function(ownerImage) {\n        this.ownerImage = ownerImage;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerSign\",\n      function(ownerSign) {\n        this.ownerSign = ownerSign;\n        this.socket.emit(\"ownerAbout\", ownerSign);\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerAbout\",\n      function(ownerSign) {\n        this.ownerSign = ownerSign;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerSignUpdate\",\n      function(ownerSign) {\n        this.socket.emit(\"ownerSignUpdate\", ownerSign);\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"ownerAboutUpdate\",\n      function(ownerSign) {\n        this.ownerSign = ownerSign;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"insideRoomUpdtae\",\n      function(roomInfo) {\n        this.roomOwner = roomInfo.roomOwner;\n\n        console.log(\"MEMBURU#@\");\n        console.log(roomInfo.connMembers);\n        console.log(\"MEMBURU#@\");\n        //this.connectedUsers = [];\n        //if (roomInfo.roomMember != null) {\n        //  this.connectedUsers.push({\n        //    username: roomInfo.usrname,\n        //    avatar: roomInfo.image,\n        //    title: roomInfo.roomMember,\n        //    subtitle: roomInfo.aboutMe\n        //  });\n        //  console.log(this.connectedUsers);\n        //}\n        //if (this.temp.indexOf(roomInfo.usrname) <= -1) {\n        //  this.temp.push(roomInfo.usrname);\n        //}\n\n        this.connectedUsers = roomInfo.connMembers;\n\n        this.connectedUsers.push({ divider: true, inset: true });\n        console.log(\"################INSIDE CHAT ROOM################\");\n        //console.log(this.connectedUsers.length);\n        //for(let keys in this.connectedUsers) {\n        //  if(this.connectedUsers[keys].username != undefined) {\n        //    console.log(\"The members inside this room are: \" +this.connectedUsers[keys].username);\n        //  }\n        //}\n        console.log(this.connectedUsers);\n        //console.log(roomInfo.roomOwner);\n        //console.log(roomInfo.roomMember);\n        //console.log(roomInfo.aboutMe);\n        //console.log(roomInfo.gender);\n        console.log(\"THe room owner is \" + this.roomOwner);\n\n        //this.connectedUsers = _.uniq(this.connectedUsers, \"username\");\n\n        console.log(\"################INSIDE CHAT ROOM################\");\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"insideRoomUpdtaeUL\",\n      function(roomInfo) {\n        this.roomOwner = roomInfo.roomOwner;\n\n        //this.connectedUsers = [];\n        //if (roroomOwneromInfo.roomMember != null) {\n        //  thisroomOwner.connectedUsers.push({\n        //    usroomOwnerername: roomInfo.usrname,\n        //    avatar: roomInfo.image,\n        //    title: roomInfo.roomMember,\n        //    subtitle: roomInfo.aboutMe\n        //  });\n        //  console.log(this.connectedUsers);\n        //}\n\n        this.connectedUsers = roomInfo.connMembers;\n\n        for (let i = 0; i < this.connectedUsers.length; i++) {\n          if (this.connectedUsers[i].isRoomOwner) {\n            if (\n              this.connectedUsers[i].userId == this.$store.getters.user.userId\n            ) {\n              this.isRoomOwner = true;\n            }\n          }\n        }\n\n        this.connectedUsers.push({ divider: true, inset: true });\n        console.log(\"################INSIDE CHAT ROOM################\");\n        //console.log(this.connectedUsers.length);\n        //for(let keys in this.connectedUsers) {\n        //  if(this.connectedUsers[keys].username != undefined) {\n        //    console.log(\"The members inside this room are: \" +this.connectedUsers[keys].username);\n        //  }\n        //}\n        console.log(this.connectedUsers);\n        //console.log(roomInfo.roomOwner);\n        //console.log(roomInfo.roomMember);\n        //console.log(roomInfo.aboutMe);\n        //console.log(roomInfo.gender);\n        //this.connectedUsers = _.uniq(this.connectedUsers, \"username\");\n        console.log(\"THe room owner is \" + this.roomOwner);\n        console.log(\"################INSIDE CHAT ROOM################\");\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"userSend\",\n      function(message) {\n        this.messages.push(message);\n        if (this.messages.length > 7) {\n          this.$vuetify.goTo(9999);\n        }\n        for (let i = 0; i < this.messages.length; i++) {\n          if (this.$store.getters.user.userName === this.messages[i].user) {\n            this.chattyUser = true;\n          } else {\n            this.chattyUser = false;\n          }\n        }\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"addFriend\",\n      function(friendInfo) {\n        this.ifriendPic = friendInfo.userImage;\n        this.ifriendName = friendInfo.userName;\n        this.friendId = friendInfo.friendId;\n        this.requestingUser = friendInfo.userId;\n        this.newFriendAdd = true;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"notFriend\",\n      function() {\n        this.alreadyFriend = true;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"alreadyFriend\",\n      function() {\n        this.alreadyFriend = false;\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"userLeft\",\n      function(roomInfo) {\n        console.log(\"#ROOMNAME INSIDE USERLEFT SOCKET#\");\n        console.log(roomInfo.roomName);\n\n        console.log(\"#ROOMNAME INSIDE USERLEFT SOCKET#\");\n        this.socket.emit(\"leaveRoom\", { roomName: roomInfo.roomName });\n        this.socket.emit(\"roomLeft\", {\n          roomName: roomInfo.roomName,\n          user: roomInfo.user\n        });\n        this.isRoomOwner = false;\n\n        //socket.emit(\"cleanUpClient\", { roomName: roomInfo.roomName });\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"userKicked\",\n      function(userInfo) {\n        if (this.$store.getters.user.userId === userInfo) {\n          this.$router.replace(\"/dashboard\");\n        }\n      }.bind(this)\n    );\n\n    this.socket.on(\n      \"disconnect\",\n      function() {\n        console.log(\"The socket of inside chat room is disconnecteds#: \");\n        this.socket.disconnect(true);\n      }.bind(this)\n    );\n  },\n  mounted() {},\n  updated() {\n    //this.$vuetify.goTo(9999);\n  },\n  props: {\n    source: String\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user;\n    },\n    error() {\n      return this.$store.getters.error;\n    },\n    menuItems_b() {\n      let menuItems = [\n        { icon: \"fa-user-plus\", title: \"Sign up\", link: \"/signup\" },\n        { icon: \"lock_open\", title: \"Login\", link: \"/login\" }\n      ];\n      if (this.userIsAuthenticated) {\n        menuItems = [\n          { icon: \"supervisor_account\", title: \"Friends\", link: \"/dashboard\" },\n          { icon: \"supervisor_account\", title: \"dashboard\", link: \"/dashboard\" }\n          //{icon: 'logout', title: 'Logout', link: '/login'}\n        ];\n        //console.log(menuItems[0]);\n      }\n      return menuItems;\n    },\n    userIsAuthenticated() {\n      return (\n        this.$store.getters.user !== null &&\n        this.$store.getters.user !== undefined\n      );\n    }\n  },\n  methods: {\n    userOption(userInfo, userId) {\n      if (userId === this.$store.getters.user.userId) {\n        this.memberChoice = null;\n      } else if (this.isRoomOwner) {\n        this.memberChoice = [\n          { title: \"Profile\" },\n          { title: \"Kick Out\" },\n          { title: \"Block\" }\n        ];\n      } else {\n        this.memberChoice = [{ title: \"Profile\" }, { title: \"Add Friend\" }];\n      }\n      //alert(userKicked);\n      //this.setChooseOption = true;\n      this.uID = userId;\n      this.$store.dispatch(\"userShowProile\", { userId: this.uID });\n      this.userNameProfile = userInfo;\n      this.userKicked = userInfo;\n    },\n    userChoose(userOption) {\n      //alert(this.uID + \"  \" + this.userKicked);\n\n      alert(this.uID);\n      alert(this.$store.getters.user.userId);\n\n      this.$store.dispatch(\"getFriendInfo\", {\n        userId: this.$store.getters.user.userId,\n        friendId: this.uID\n      });\n\n      if (userOption === \"Kick Out\") {\n        this.kickUser();\n      }\n      if (userOption === \"Profile\") {\n        this.userSign = this.$store.getters.userProfile.userAbout;\n\n        if (this.userSign === \"\") {\n          this.userSign = \"The user got nothing to tell about himself.\";\n        }\n        this.userImage = this.$store.getters.userProfile.userImage;\n        this.dialogUserProfile = true;\n      }\n    },\n\n    ownerProfile() {\n      this.userSign = this.$store.getters.user.userAbout;\n\n      if (this.userSign === \"\") {\n        this.userSign = \"The user got nothing to tell about himself.\";\n      }\n      this.userImage = this.$store.getters.user.userImage;\n      this.dialogOwnerProfile = true;\n    },\n\n    addFriend() {\n      alert(this.$store.getters.user.userId + \"  \" + this.uID);\n      this.$store.dispatch(\"userAddFriend\", {\n        userId: this.$store.getters.user.userId,\n        friendId: this.uID,\n        displayName: this.$store.getters.user.displayName,\n        userPic: this.$store.getters.user.userImage\n      });\n    },\n\n    acceptFriend() {\n      console.log(\"____________\");\n      console.log(this.ifriendPic);\n      console.log(this.ifriendName);\n      console.log(this.friendId);\n      console.log(this.requestingUser);\n      console.log(\"____________\");\n      this.$store.dispatch(\"reqAccepted\", {\n        userId: this.requestingUser,\n        friendId: this.friendId\n      });\n      this.newFriendAdd = false;\n    },\n\n    cancleDialog() {\n      this.dialogUserProfile = false;\n    },\n\n    leaveRoom() {\n      //  this.userName = this.$store.getters.user.userName;\n      console.log(this.user);\n      console.log(this.room);\n      if (this.user.roomname != null || this.user.roomname != undefined) {\n        this.$store.dispatch(\"leaveRoom\", {\n          roomname: this.user.roomname,\n          username: this.user.userName\n        });\n      } else {\n        this.$store.dispatch(\"leaveRoom\", {\n          roomname: this.$store.getters.room.roomname,\n          username: this.user.userName\n        });\n      }\n      console.log(\"##############Leave Room###############\");\n      //console.log(leaveRoomInfo.userName);\n      //console.log(leaveRoomInfo.roomname)\n      //this.$store.dispatch(\"leaveRoom\", {\n      //  roomname: roomLeaving.roomname,\n      //  username: userLeaving.userName,\n      //});\n      console.log(\"##############Leave Room###############\");\n      //this.$router.replace(\"/dashboard\");\n    },\n    kickUser() {\n      if (this.user.roomname != null || this.user.roomname != undefined) {\n        this.$store.dispatch(\"userKicked\", {\n          roomname: this.user.roomname,\n          username: this.userKicked\n        });\n      } else {\n        this.$store.dispatch(\"userKicked\", {\n          roomname: this.$store.getters.room.roomname,\n          username: this.userKicked\n        });\n      }\n    },\n    async onLogout() {\n      //this.$store.dispatch(\"logOutUserUp\");\n      if (this.user.roomname != null || this.user.roomname != undefined) {\n        await this.$store.dispatch(\"leaveRoomLogout\", {\n          roomname: this.user.roomname,\n          username: this.user.userName\n        });\n      } else {\n        await this.$store.dispatch(\"leaveRoomLogout\", {\n          roomname: this.$store.getters.room.roomname,\n          username: this.user.userName\n        });\n      }\n      //this.$store.dispatch(\"logOutUserUp\")\n    },\n    send() {\n      this.userName = this.$store.getters.user.userName;\n      this.message.type = \"chat\";\n      this.message.text = this.userInputMsg;\n      this.message.user = this.user.userName;\n      this.message.userImage = this.$store.getters.user.userImage;\n      this.message.timestamp = \"Today\";\n      console.log(this.roomName);\n      if (this.message.text != \"\") {\n        this.socket.emit(\"userSend\", {\n          message: this.message,\n          roomName: this.$store.getters.room.roomname\n        });\n      }\n\n      this.reset();\n    },\n    reset() {\n      this.message.type = \"\";\n      this.userInputMsg = \"\";\n      this.message.user = \"\";\n      this.message.text = \"\";\n      this.message.userImage = \"\";\n      this.message.timestamp = \"\";\n    },\n\n    fetchPrivate() {\n      this.friendInPrivateNotClicked = false;\n      this.friendInPrivateClicked = true;\n    },\n\n    sendPrivate() {\n      this.userName = this.$store.getters.user.userName;\n      this.privateMessage.type = \"privateChat\";\n      this.privateMessage.text = this.userInputPrivateMsg;\n      this.privateMessage.user = this.user.userName;\n      this.privateMessage.userImage = this.$store.getters.user.userImage;\n      this.privateMessage.timestamp = \"Today\";\n      if (this.message.text != \"\") {\n        this.socket.emit(\"userSendPrivate\", {\n          message: this.privateMessage\n        });\n      }\n\n      this.resetPrivate();\n    },\n    resetPrivate() {\n      this.privateMessage.type = \"\";\n      this.userInputPrivateMsg = \"\";\n      this.privateMessage.user = \"\";\n      this.privateMessage.text = \"\";\n      this.privateMessage.userImage = \"\";\n      this.privateMessage.timestamp = \"\";\n    },\n    userIsTyping() {},\n    userAreTyping() {},\n    stoppedTyping() {},\n    onScroll(e) {\n      this.offsetTop = e.target.scrollTop;\n    },\n    async privateWinToggle() {\n      /*\n      if (this.privateWin === false) {\n        \n        \n          await this.$store.dispatch(\"updateFriendList\", {\n          userId: this.$store.getters.user.userId\n        });\n        \n      \n      }\n      \n        \n        if (this.$store.getters.friendsList != null) {\n        this.addedFriends = this.$store.getters.friendsList;\n        if (this.addedFriends[0] === null) {\n          this.addedFriends = [];\n        }\n      }\n      */\n      this.privateWin = !this.privateWin;\n      this.friendInPrivateClicked = false;\n      this.friendInPrivateNotClicked = true;\n    },\n    async listFriends() {\n      /*await this.$store.dispatch(\"getFriendList\", {\n        userId: this.$store.getters.user.userId\n      });*/\n\n      await this.$store.dispatch(\"updateFriendList\", {\n        userId: this.$store.getters.user.userId\n      });\n\n      if (this.$store.getters.friendsList != null) {\n        this.addedFriends = this.$store.getters.friendsList;\n        if (this.addedFriends[0] === null) {\n          this.addedFriends = [];\n        }\n      }\n      /*for (let i = 0; i < this.addedFriends.length; i++) {\n        alert(this.addedFriends[i].friendPic);\n        if (this.addedFriends[i].friendGender === \"Female\") {\n          this.friendGender = 0;\n        } else {\n          this.friendGender = 1;\n        }\n      }*/\n      //this.friendList = true;\n      this.privateWinToggle();\n    },\n    dragMouseDown: function(event) {\n      event.preventDefault();\n      // get the mouse cursor position at startup:\n      this.positions.clientX = event.clientX;\n      this.positions.clientY = event.clientY;\n      document.onmousemove = this.elementDrag;\n      document.onmouseup = this.closeDragElement;\n    },\n    elementDrag: function(event) {\n      event.preventDefault();\n      this.positions.movementX = this.positions.clientX - event.clientX;\n      this.positions.movementY = this.positions.clientY - event.clientY;\n      this.positions.clientX = event.clientX;\n      this.positions.clientY = event.clientY;\n      // set the element's new position:\n      this.$refs.draggableContainer.style.top =\n        this.$refs.draggableContainer.offsetTop -\n        this.positions.movementY +\n        \"px\";\n      this.$refs.draggableContainer.style.left =\n        this.$refs.draggableContainer.offsetLeft -\n        this.positions.movementX +\n        \"px\";\n    },\n    closeDragElement() {\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n};\n</script>\n<style>\n.v-card--reveal {\n  align-items: center;\n  bottom: 0;\n  justify-content: center;\n  opacity: 0.8;\n  position: absolute;\n  width: 100%;\n}\n\n.chat {\n  width: 800px;\n}\n\n.bubble {\n  background-color: #ffffff;\n  border-radius: 2px;\n  box-shadow: 0 0 6px #ffffff;\n  display: inline-block;\n  padding: 10px 18px;\n  position: relative;\n  vertical-align: top;\n}\n\n.bubble::before {\n  background-color: #ffffff;\n  content: \"\\00a0\";\n  display: block;\n  height: 16px;\n  position: absolute;\n  top: 11px;\n  transform: rotate(29deg) skew(-35deg);\n  -moz-transform: rotate(29deg) skew(-35deg);\n  -ms-transform: rotate(29deg) skew(-35deg);\n  -o-transform: rotate(29deg) skew(-35deg);\n  -webkit-transform: rotate(29deg) skew(-35deg);\n  width: 20px;\n}\n\n.me {\n  background-color: #3949ab;\n  float: left;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  margin: 5px 45px 5px 20px;\n}\n\n.me::before {\n  background-color: #3949ab;\n  box-shadow: -2px 2px 2px 0 rgba(255, 255, 255, 0.425);\n  left: -9px;\n}\n\n.you {\n  float: right;\n  margin: 5px 20px 5px 45px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.you::before {\n  box-shadow: 2px -2px 2px 0 rgba(253, 253, 255, 0.411);\n  right: -9px;\n}\n\n#draggable-container {\n  position: absolute;\n  z-index: 9;\n}\n#draggable-header {\n  z-index: 10;\n}\n\n\n</style>\n"]}]}