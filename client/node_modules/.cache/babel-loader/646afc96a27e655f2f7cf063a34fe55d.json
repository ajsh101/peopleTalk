{"remainingRequest":"/home/user101/Desktop/webapp/peopleTalk/client/node_modules/babel-loader/lib/index.js!/home/user101/Desktop/webapp/peopleTalk/client/node_modules/eslint-loader/index.js??ref--13-0!/home/user101/Desktop/webapp/peopleTalk/client/src/Store/store.js","dependencies":[{"path":"/home/user101/Desktop/webapp/peopleTalk/client/src/Store/store.js","mtime":1571320166000},{"path":"/home/user101/Desktop/webapp/peopleTalk/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user101/Desktop/webapp/peopleTalk/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user101/Desktop/webapp/peopleTalk/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/user101/Desktop/webapp/peopleTalk/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from \"vue\"; //import Vuex, { Store } from \"vuex\";\n\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nimport router from \"../router\";\nVue.use(Vuex);\n\nvar Cookies = require(\"cookies-js\");\n\nvar ltoken = null; //const _ = require(\"underscore\");\n\nexport default new Vuex.Store({\n  state: {\n    User: null,\n    Room: null,\n    Friend: null,\n    FriendList: null,\n    userProfile: null,\n    loading: false,\n    notify: false,\n    error: null\n  },\n  mutations: {\n    setUser: function setUser(state, payload) {\n      state.User = payload;\n    },\n    setFriendList: function setFriendList(state, payload) {\n      state.FriendList = payload;\n    },\n    setUserProfile: function setUserProfile(state, payload) {\n      state.userProfile = payload;\n    },\n    setRoom: function setRoom(state, payload) {\n      state.Room = payload;\n    },\n    setFriend: function setFriend(state, payload) {\n      state.Friend = payload;\n    },\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setNotification: function setNotification(state, payload) {\n      state.notify = payload;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload; //console.log(\"The #ERROR: \" + payload);\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    },\n    clearNotification: function clearNotification(state) {\n      state.notify = null;\n    }\n  },\n  actions: {\n    signUserUp: function signUserUp(_ref, payload) {\n      var commit = _ref.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios.post(\"http://localhost:3000/user/signup\", payload).then(function (response) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\");\n        console.log(response);\n        commit(\"setUser\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false);\n        commit(\"setError\", error); // console.log(payload);\n      });\n    },\n    verifyUserUp: function verifyUserUp(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios.post(\"http://localhost:3000/user/userVerification\", payload).then(function (response) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\");\n        console.log(response);\n        commit(\"setUser\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false);\n        commit(\"setError\", error); //console.log(payload);\n      });\n    },\n    loginUserUp: function loginUserUp(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false); //axios\n      //  .get(\"http://localhost:3000/getcsrftoken\")\n      //  .then(response => {\n      //    console.log(response);\n      //    //axios.defaults.headers.common['X-CSRF-TOKEN'] = response.data.csrfToken\n      //    //console.log(\"The Csurf token is : #\" +response.data.csrfToken);\n      //    commit(\"setLoading\", false);\n      //    //commit(\"setNotification\", true);\n      //    commit(\"clearError\");\n      //\n      //    //commit(\"setUser\", payload);\n      //\n      //  })\n      //  .catch(error => {\n      //    commit(\"setLoading\", false);\n      //    //commit(\"setNotification\", false);\n      //    commit(\"setError\", error);\n      //\n      //  });\n\n      axios.post(\"http://localhost:3000/user/login\", payload, {\n        withCredentials: true\n      }).then(function (response) {\n        //axios.defaults.headers.common['X-CSRF-TOKEN'] = response.data.csrfToken\n        //console.log(\"THe cookie : \" + response.headers);\n        ltoken = response.data.userId;\n\n        if (Cookies.enabled) {\n          Cookies.set(ltoken, response.data.token, {});\n        } //console.log(\"The Csurf token is : #\" +response.data.csurfToken);\n\n\n        commit(\"setLoading\", false); //commit(\"setNotification\", true);\n\n        commit(\"clearError\"); //console.log(payload);\n\n        payload = response.data;\n        commit(\"setUser\", payload); //alert(payload.userId);\n        //dispatch(\"getFriendList\", {userId: payload.userId });\n        //console.log(response);\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error); //console.log(error.response.data.message);\n\n        if (error.response.data.log === false) {\n          window.location.href = \"/sendMail\";\n        }\n\n        if (error.response.data.log === \"isOnline\") {\n          window.location.href = \"/userOnline\";\n        } //console.log(\n        //  \"#####Error Data##########:\" + error.response.data.message\n        //);\n        //console.log(payload);\n\n      });\n    },\n    logOutUserUp: function logOutUserUp(_ref4) {\n      var commit = _ref4.commit;\n      commit(\"setLoading\", true);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/userLogout\").then(function (response) {\n        commit(\"setLoading\", false); //console.log(response.data);\n        //commit(\"setNotification\", true);\n\n        if (Cookies.enabled) {\n          Cookies.expire(ltoken);\n        }\n\n        commit(\"setUser\", null);\n        console.log(response);\n        commit(\"clearError\");\n        router.push(\"/login\");\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error);\n        commit(\"setUser\", null); // console.log(\"######TEsting##########\");\n\n        router.push(\"/login\");\n      });\n    },\n    userPicUpload: function userPicUpload(_ref5, payload) {\n      var commit = _ref5.commit;\n      commit(\"setLoading\", true); //commit(\"setNotification\", true);\n      //console.log(payload);\n\n      var fd = new FormData();\n\n      if (payload.image === null) {\n        fd.append(\"userImage\", undefined);\n      } else {\n        fd.append(\"userImage\", payload.image, payload.image.name);\n      }\n\n      fd.append(\"payload\", payload.displayName);\n      fd.append(\"payload\", payload.gender);\n      fd.append(\"payload\", payload.userAbout);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/updateProfile \", fd, {\n        headers: {\n          accept: \"application/json\",\n          \"Accept-Language\": \"en-US,en;q=0.8\",\n          \"Content-Type\": \"multipart/form-data; boundary=\".concat(fd._boundary)\n        }\n      }).then(function (response) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", true);\n\n        commit(\"clearError\"); //console.log(payload.displayName);\n\n        commit(\"setUser\", response.data);\n        console.log(response);\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error);\n        commit(\"setUser\", null);\n        router.push(\"/login\"); //console.log(error.response.data.message);\n      });\n    },\n    userInfo: function userInfo(_ref6, payload) {\n      var commit = _ref6.commit;\n      commit(\"setLoading\", true); //commit(\"setNotification\", true);\n      //console.log(payload);\n\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/sendProfile\").then(function (response) {\n        commit(\"setLoading\", false); //console.log(response.data);\n        //commit(\"setNotification\", true);\n\n        commit(\"clearError\");\n        payload = response.data; //console.log(\"Payload is\" + payload);\n\n        commit(\"setUser\", payload); //console.log(\"######GENDER#######: \" + payload.gender);\n        //console.log(response);\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error);\n        commit(\"setUser\", null); //console.log(\"######TEsting##########\");\n\n        router.push(\"/login\"); //console.log(error.response.data.message);\n      });\n    },\n    userShowProile: function userShowProile(_ref7, payload) {\n      var commit = _ref7.commit;\n      commit(\"setLoading\", true); //commit(\"setNotification\", true);\n\n      console.log(payload);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/userShowProfile\", payload).then(function (response) {\n        commit(\"setLoading\", false); //console.log(response.data);\n        //commit(\"setNotification\", true);\n\n        commit(\"clearError\");\n        payload = response.data; //console.log(\"Payload is\" + payload);\n\n        commit(\"setUserProfile\", payload); //console.log(\"######GENDER#######: \" + payload.gender);\n        //console.log(response);\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error);\n        commit(\"setUserProfile\", null); //console.log(\"######TEsting##########\");\n\n        router.push(\"/login\"); //console.log(error.response.data.message);\n      });\n    },\n    newPassword: function newPassword(_ref8, payload) {\n      var commit = _ref8.commit;\n      commit(\"setLoading\", true); //commit(\"setNotification\", true);\n\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(\"token\");\n      axios.put(\"http://localhost:3000/user/updatePassword/\", payload).then(function (response) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", true);\n\n        commit(\"clearError\"); //console.log(payload);\n\n        commit(\"setUser\", payload);\n        console.log(response.data.message);\n      }).catch(function (error) {\n        commit(\"setLoading\", false); //commit(\"setNotification\", false);\n\n        commit(\"setError\", error); //console.log(error.response.data.message);\n        //if(error.response.data.log === false) {\n        //  window.location.href = \"/sendMail\";\n        //}\n        //console.log(payload);\n      });\n    },\n    forgetUserPassword: function forgetUserPassword(_ref9, payload) {\n      var commit = _ref9.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios.post(\"http://localhost:3000/user/forgetPaasword\", payload).then(function (response) {\n        //console.log(response.data.token);\n        if (Cookies.enabled) {\n          Cookies.set(\"token\", response.data.token, {\n            expires: 600\n          });\n        } //console.log(Cookies.get(\"token\"));\n\n\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response);\n\n        commit(\"setUser\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false);\n        commit(\"setError\", error); //console.log(payload);\n      });\n    },\n    resetPasswd: function resetPasswd(_ref10, payload) {\n      var commit = _ref10.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.put(\"http://localhost:3000/user/resetPasswd\", payload).then(function (response) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\");\n        console.log(response);\n        commit(\"setUser\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false);\n        commit(\"setError\", error); //console.log(\"Password Cant be changed:( @##\");\n      });\n    },\n    createRoom: function createRoom(_ref11, payload) {\n      var dispatch = _ref11.dispatch,\n          commit = _ref11.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/rooms/createRoom\", payload).then(function (response) {\n        //console.log(\"##Payload CreateROOM##\");\n        //console.log(payload);\n        //console.log(\"##Payload CREATEROOM##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\");\n        var dpatch = payload; //console.log(response.data);\n\n        payload = response.data;\n        commit(\"setRoom\", payload);\n        dispatch(\"roomInfo\", {\n          roomname: dpatch.roomname,\n          username: dpatch.username,\n          password: dpatch.password\n        });\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"Room Cant be created\");\n      });\n    },\n    roomInfo: function () {\n      var _roomInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref12, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref12.commit;\n                commit(\"setLoading\", true);\n                commit(\"setNotification\", false);\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n                _context.next = 6;\n                return axios.post(\"http://localhost:3000/rooms/roomInfo\", payload).then(function (response) {\n                  //router.push(\"/chatRoom\");\n                  commit(\"setLoading\", false); //console.log(response.data);\n\n                  console.log(\"##Payload ROOMINFO##\");\n                  console.log(payload);\n                  console.log(\"##Payload ROOMINFO##\"); //commit(\"setNotification\", true);\n                  // console.log(\"IS THIS REAL\");\n                  //console.log(response.data);\n\n                  commit(\"clearError\");\n                  payload = response.data;\n                  console.log(payload); //console.log(\"Payload is\" + payload);\n\n                  commit(\"setUser\", payload);\n                  commit(\"setRoom\", payload); //console.log(store.getters.user.passCorrect);\n                  //console.log(response);\n                }).catch(function (error) {\n                  commit(\"setUser\", error.response.data); //console.log(store.getters.user.passCorrect)\n\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", false);\n                  commit(\"setError\", error); //console.log(\"Room Cant be created\");\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function roomInfo(_x, _x2) {\n        return _roomInfo.apply(this, arguments);\n      }\n\n      return roomInfo;\n    }(),\n    userAddFriend: function userAddFriend(_ref13, payload) {\n      var commit = _ref13.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/addFriend\", payload).then(function (response) {\n        //console.log(\"##Payload CreateROOM##\");\n        //console.log(payload);\n        //console.log(\"##Payload CREATEROOM##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response.data);\n\n        payload = response.data;\n        commit(\"setFriend\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"Room Cant be created\");\n      });\n    },\n    getFriendInfo: function getFriendInfo(_ref14, payload) {\n      var commit = _ref14.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/getFriendInfo\", payload).then(function (response) {\n        //console.log(\"##Payload CreateROOM##\");\n        //console.log(payload);\n        //console.log(\"##Payload CREATEROOM##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response.data);\n\n        payload = response.data; //commit(\"setFriend\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"Room Cant be created\");\n      });\n    },\n    getFriendList: function () {\n      var _getFriendList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref15, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref15.commit;\n                commit(\"setLoading\", true);\n                commit(\"setNotification\", false);\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n                _context2.next = 6;\n                return axios.post(\"http://localhost:3000/user/getFriendList\", payload).then(function (response) {\n                  //console.log(\"##Payload CreateROOM##\");\n                  //console.log(payload);\n                  //console.log(\"##Payload CREATEROOM##\");\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", true);\n                  commit(\"clearError\"); //console.log(response.data);\n\n                  payload = response.data.userId; //alert(payload);\n                  //console.log(payload.friendList);\n                  //let fList = [];\n                  //fList = payload.friendList;\n                  //console.log();\n                  //payload.friendList = payload.friendList.slice(0, response.data.listLength);\n                  //dispatch(\"updateFriendList\", { userId: payload });\n                  //commit(\"setFriendList\", fList);\n                  //console.log(fList);\n                  //commit(\"setFriend\", payload);\n                }).catch(function (error) {\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", false); //console.log(payload);\n\n                  commit(\"setError\", error); //console.log(\"Room Cant be created\");\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getFriendList(_x3, _x4) {\n        return _getFriendList.apply(this, arguments);\n      }\n\n      return getFriendList;\n    }(),\n    updateFriendList: function () {\n      var _updateFriendList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref16, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref16.commit;\n                commit(\"setLoading\", true);\n                commit(\"setNotification\", false);\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n                _context3.next = 6;\n                return axios.post(\"http://localhost:3000/user/updateFriendList\", payload).then(function (response) {\n                  //console.log(\"##Payload CreateROOM##\");\n                  //console.log(payload);\n                  //console.log(\"##Payload CREATEROOM##\");\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", true);\n                  commit(\"clearError\"); //console.log(response.data);\n\n                  payload = response.data; //console.log(payload.friendList);\n\n                  var fList = [];\n                  fList = payload.friendList;\n                  console.log(); //payload.friendList = payload.friendList.slice(0, response.data.listLength);\n\n                  commit(\"setFriendList\", fList);\n                  console.log(fList); //commit(\"setFriend\", payload);\n                }).catch(function (error) {\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", false); //console.log(payload);\n\n                  commit(\"setError\", error); //console.log(\"Room Cant be created\");\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateFriendList(_x5, _x6) {\n        return _updateFriendList.apply(this, arguments);\n      }\n\n      return updateFriendList;\n    }(),\n    reqAccepted: function reqAccepted(_ref17, payload) {\n      var commit = _ref17.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/user/reqAccepted\", payload).then(function (response) {\n        //console.log(\"##Payload CreateROOM##\");\n        //console.log(payload);\n        //console.log(\"##Payload CREATEROOM##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response.data);\n\n        payload = response.data; //commit(\"setFriend\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"Room Cant be created\");\n      });\n    },\n    deleteFriend: function () {\n      var _deleteFriend = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref18, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref18.commit;\n                commit(\"setLoading\", true);\n                commit(\"setNotification\", false);\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n                _context4.next = 6;\n                return axios.post(\"http://localhost:3000/user/deleteFriend\", payload).then(function (response) {\n                  //console.log(\"##Payload CreateROOM##\");\n                  //console.log(payload);\n                  //console.log(\"##Payload CREATEROOM##\");\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", true);\n                  commit(\"clearError\"); //console.log(response.data);\n\n                  payload = response.data; //console.log(fList);\n                  //commit(\"setFriend\", payload);\n                }).catch(function (error) {\n                  commit(\"setLoading\", false);\n                  commit(\"setNotification\", false); //console.log(payload);\n\n                  commit(\"setError\", error); //console.log(\"Room Cant be created\");\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteFriend(_x7, _x8) {\n        return _deleteFriend.apply(this, arguments);\n      }\n\n      return deleteFriend;\n    }(),\n    leaveRoom: function leaveRoom(_ref19, payload) {\n      var commit = _ref19.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/rooms/leaveRoom\", payload).then(function (response) {\n        //console.log(\"##Leave Room##\");\n        //console.log(payload);\n        //console.log(\"##Leave Room##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response);\n\n        payload = response.data;\n        commit(\"setRoom\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"User cant left the room\");\n      });\n    },\n    userKicked: function userKicked(_ref20, payload) {\n      var commit = _ref20.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/rooms/leaveRoom\", payload).then(function (response) {\n        //console.log(\"##Leave Room##\");\n        //console.log(payload);\n        //console.log(\"##Leave Room##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\");\n        console.log(response); //payload = response.data;\n        //commit(\"setRoom\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"User cant left the room\");\n      });\n    },\n    leaveRoomLogout: function leaveRoomLogout(_ref21, payload) {\n      var dispatch = _ref21.dispatch,\n          commit = _ref21.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/rooms/leaveRoom\", payload).then(function (response) {\n        //console.log(\"##Leave Room##\");\n        //console.log(payload);\n        //console.log(\"##Leave Room##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response);\n\n        payload = response.data;\n        commit(\"setRoom\", payload);\n        dispatch(\"logOutUserUp\");\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"User cant left the room\");\n      });\n    },\n    roomClear: function roomClear(_ref22, payload) {\n      var commit = _ref22.commit;\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + Cookies.get(ltoken);\n      axios.post(\"http://localhost:3000/rooms/roomDelete\", payload).then(function (response) {\n        //console.log(\"##Leave Room##\");\n        //console.log(payload);\n        //console.log(\"##Leave Room##\");\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", true);\n        commit(\"clearError\"); //console.log(response);\n\n        payload = response.data; //commit(\"setRoom\", payload);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setNotification\", false); //console.log(payload);\n\n        commit(\"setError\", error); //console.log(\"User cant left the room\");\n      });\n    },\n    clearError: function clearError(_ref23) {\n      var commit = _ref23.commit;\n      commit(\"clearError\");\n    },\n    unsetUser: function unsetUser(_ref24) {\n      var commit = _ref24.commit;\n      commit(\"setUser\", null);\n    },\n    unsetFriend: function unsetFriend(_ref25) {\n      var commit = _ref25.commit;\n      commit(\"setFriend\", null);\n    },\n    unsetRoom: function unsetRoom(_ref26) {\n      var commit = _ref26.commit;\n      commit(\"setRoom\", null);\n    },\n    clearNotification: function clearNotification(_ref27) {\n      var commit = _ref27.commit;\n      commit(\"clearNotification\");\n    }\n  },\n  getters: {\n    user: function user(state) {\n      return state.User;\n    },\n    friendsList: function friendsList(state) {\n      return state.FriendList;\n    },\n    userFriends: function userFriends(state) {\n      return state.Friend;\n    },\n    userProfile: function userProfile(state) {\n      return state.userProfile;\n    },\n    room: function room(state) {\n      return state.Room;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      console.log(\"##########Error####### \" + state.error);\n      return state.error;\n    },\n    notify: function notify(state) {\n      return state.notify;\n    }\n  }\n});",{"version":3,"sources":["/home/user101/Desktop/webapp/peopleTalk/client/src/Store/store.js"],"names":["Vue","Vuex","axios","router","use","Cookies","require","ltoken","Store","state","User","Room","Friend","FriendList","userProfile","loading","notify","error","mutations","setUser","payload","setFriendList","setUserProfile","setRoom","setFriend","setLoading","setNotification","setError","clearError","clearNotification","actions","signUserUp","commit","post","then","response","console","log","catch","verifyUserUp","loginUserUp","withCredentials","data","userId","enabled","set","token","window","location","href","logOutUserUp","defaults","headers","common","get","expire","push","userPicUpload","fd","FormData","image","append","undefined","name","displayName","gender","userAbout","accept","_boundary","userInfo","userShowProile","newPassword","put","message","forgetUserPassword","expires","resetPasswd","createRoom","dispatch","dpatch","roomname","username","password","roomInfo","userAddFriend","getFriendInfo","getFriendList","updateFriendList","fList","friendList","reqAccepted","deleteFriend","leaveRoom","userKicked","leaveRoomLogout","roomClear","unsetUser","unsetFriend","unsetRoom","getters","user","friendsList","userFriends","room"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\n//import Vuex, { Store } from \"vuex\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nimport router from \"../router\";\nVue.use(Vuex);\nconst Cookies = require(\"cookies-js\");\nlet ltoken = null;\n//const _ = require(\"underscore\");\n\nexport default new Vuex.Store({\n  state: {\n    User: null,\n    Room: null,\n    Friend: null,\n    FriendList: null,\n    userProfile: null,\n    loading: false,\n    notify: false,\n    error: null\n  },\n  mutations: {\n    setUser(state, payload) {\n      state.User = payload;\n    },\n\n    setFriendList(state, payload) {\n      state.FriendList = payload;\n    },\n\n    setUserProfile(state, payload) {\n      state.userProfile = payload;\n    },\n    setRoom(state, payload) {\n      state.Room = payload;\n    },\n\n    setFriend(state, payload) {\n      state.Friend = payload;\n    },\n\n    setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setNotification(state, payload) {\n      state.notify = payload;\n    },\n    setError(state, payload) {\n      state.error = payload;\n      //console.log(\"The #ERROR: \" + payload);\n    },\n    clearError(state) {\n      state.error = null;\n    },\n    clearNotification(state) {\n      state.notify = null;\n    }\n  },\n  actions: {\n    signUserUp({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios\n        .post(\"http://localhost:3000/user/signup\", payload)\n        .then(response => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          console.log(response);\n          commit(\"setUser\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          // console.log(payload);\n        });\n    },\n    verifyUserUp({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios\n        .post(\"http://localhost:3000/user/userVerification\", payload)\n        .then(response => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          console.log(response);\n          commit(\"setUser\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(payload);\n        });\n    },\n    loginUserUp({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      //axios\n      //  .get(\"http://localhost:3000/getcsrftoken\")\n      //  .then(response => {\n      //    console.log(response);\n      //    //axios.defaults.headers.common['X-CSRF-TOKEN'] = response.data.csrfToken\n      //    //console.log(\"The Csurf token is : #\" +response.data.csrfToken);\n      //    commit(\"setLoading\", false);\n      //    //commit(\"setNotification\", true);\n      //    commit(\"clearError\");\n      //\n      //    //commit(\"setUser\", payload);\n      //\n      //  })\n      //  .catch(error => {\n      //    commit(\"setLoading\", false);\n      //    //commit(\"setNotification\", false);\n      //    commit(\"setError\", error);\n      //\n      //  });\n\n      axios\n        .post(\"http://localhost:3000/user/login\", payload, {\n          withCredentials: true\n        })\n        .then(response => {\n          //axios.defaults.headers.common['X-CSRF-TOKEN'] = response.data.csrfToken\n          //console.log(\"THe cookie : \" + response.headers);\n          ltoken = response.data.userId;\n          if (Cookies.enabled) {\n            Cookies.set(ltoken, response.data.token, {});\n          }\n          //console.log(\"The Csurf token is : #\" +response.data.csurfToken);\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(payload);\n          payload = response.data;\n          commit(\"setUser\", payload);\n          //alert(payload.userId);\n          //dispatch(\"getFriendList\", {userId: payload.userId });\n          //console.log(response);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(error.response.data.message);\n          if (error.response.data.log === false) {\n            window.location.href = \"/sendMail\";\n          }\n          if (error.response.data.log === \"isOnline\") {\n            window.location.href = \"/userOnline\";\n          }\n          //console.log(\n          //  \"#####Error Data##########:\" + error.response.data.message\n          //);\n          //console.log(payload);\n        });\n    },\n    logOutUserUp({ commit }) {\n      commit(\"setLoading\", true);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/userLogout\")\n        .then(response => {\n          commit(\"setLoading\", false);\n          //console.log(response.data);\n          //commit(\"setNotification\", true);\n          if (Cookies.enabled) {\n            Cookies.expire(ltoken);\n          }\n          commit(\"setUser\", null);\n          console.log(response);\n          commit(\"clearError\");\n          router.push(\"/login\");\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          commit(\"setUser\", null);\n          // console.log(\"######TEsting##########\");\n          router.push(\"/login\");\n        });\n    },\n    userPicUpload({ commit }, payload) {\n      commit(\"setLoading\", true);\n      //commit(\"setNotification\", true);\n      //console.log(payload);\n      const fd = new FormData();\n      if (payload.image === null) {\n        fd.append(\"userImage\", undefined);\n      } else {\n        fd.append(\"userImage\", payload.image, payload.image.name);\n      }\n      fd.append(\"payload\", payload.displayName);\n      fd.append(\"payload\", payload.gender);\n      fd.append(\"payload\", payload.userAbout);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/updateProfile \", fd, {\n          headers: {\n            accept: \"application/json\",\n            \"Accept-Language\": \"en-US,en;q=0.8\",\n            \"Content-Type\": `multipart/form-data; boundary=${fd._boundary}`\n          }\n        })\n        .then(response => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(payload.displayName);\n          commit(\"setUser\", response.data);\n          console.log(response);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          commit(\"setUser\", null);\n          router.push(\"/login\");\n          //console.log(error.response.data.message);\n        });\n    },\n    userInfo({ commit }, payload) {\n      commit(\"setLoading\", true);\n      //commit(\"setNotification\", true);\n      //console.log(payload);\n\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/sendProfile\")\n        .then(response => {\n          commit(\"setLoading\", false);\n          //console.log(response.data);\n          //commit(\"setNotification\", true);\n\n          commit(\"clearError\");\n          payload = response.data;\n          //console.log(\"Payload is\" + payload);\n          commit(\"setUser\", payload);\n          //console.log(\"######GENDER#######: \" + payload.gender);\n          //console.log(response);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          commit(\"setUser\", null);\n          //console.log(\"######TEsting##########\");\n          router.push(\"/login\");\n          //console.log(error.response.data.message);\n        });\n    },\n    userShowProile({ commit }, payload) {\n      commit(\"setLoading\", true);\n      //commit(\"setNotification\", true);\n      console.log(payload);\n\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/userShowProfile\", payload)\n        .then(response => {\n          commit(\"setLoading\", false);\n          //console.log(response.data);\n          //commit(\"setNotification\", true);\n\n          commit(\"clearError\");\n          payload = response.data;\n          //console.log(\"Payload is\" + payload);\n          commit(\"setUserProfile\", payload);\n          //console.log(\"######GENDER#######: \" + payload.gender);\n          //console.log(response);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          commit(\"setUserProfile\", null);\n          //console.log(\"######TEsting##########\");\n          router.push(\"/login\");\n          //console.log(error.response.data.message);\n        });\n    },\n    newPassword({ commit }, payload) {\n      commit(\"setLoading\", true);\n\n      //commit(\"setNotification\", true);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(\"token\");\n\n      axios\n        .put(\"http://localhost:3000/user/updatePassword/\", payload)\n        .then(response => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(payload);\n          commit(\"setUser\", payload);\n          console.log(response.data.message);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          //commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(error.response.data.message);\n          //if(error.response.data.log === false) {\n          //  window.location.href = \"/sendMail\";\n          //}\n          //console.log(payload);\n        });\n    },\n    forgetUserPassword({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", true);\n      axios\n        .post(\"http://localhost:3000/user/forgetPaasword\", payload)\n        .then(response => {\n          //console.log(response.data.token);\n          if (Cookies.enabled) {\n            Cookies.set(\"token\", response.data.token, { expires: 600 });\n          }\n          //console.log(Cookies.get(\"token\"));\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response);\n          commit(\"setUser\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(payload);\n        });\n    },\n    resetPasswd({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .put(\"http://localhost:3000/user/resetPasswd\", payload)\n        .then(response => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          console.log(response);\n          commit(\"setUser\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(\"Password Cant be changed:( @##\");\n        });\n    },\n    createRoom({ dispatch, commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/rooms/createRoom\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          let dpatch = payload;\n          //console.log(response.data);\n          payload = response.data;\n          commit(\"setRoom\", payload);\n          dispatch(\"roomInfo\", {\n            roomname: dpatch.roomname,\n            username: dpatch.username,\n            password: dpatch.password\n          });\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    async roomInfo({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      await axios\n        .post(\"http://localhost:3000/rooms/roomInfo\", payload)\n        .then(response => {\n          //router.push(\"/chatRoom\");\n          commit(\"setLoading\", false);\n          //console.log(response.data);\n\n          console.log(\"##Payload ROOMINFO##\");\n          console.log(payload);\n          console.log(\"##Payload ROOMINFO##\");\n          //commit(\"setNotification\", true);\n          // console.log(\"IS THIS REAL\");\n          //console.log(response.data);\n          commit(\"clearError\");\n          payload = response.data;\n          console.log(payload);\n          //console.log(\"Payload is\" + payload);\n          commit(\"setUser\", payload);\n          commit(\"setRoom\", payload);\n          //console.log(store.getters.user.passCorrect);\n\n          //console.log(response);\n        })\n        .catch(error => {\n          commit(\"setUser\", error.response.data);\n\n          //console.log(store.getters.user.passCorrect)\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    userAddFriend({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/addFriend\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n\n          //console.log(response.data);\n          payload = response.data;\n          commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    getFriendInfo({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/getFriendInfo\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n\n          //console.log(response.data);\n          payload = response.data;\n          //commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    async getFriendList({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      await axios\n        .post(\"http://localhost:3000/user/getFriendList\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response.data);\n\n          payload = response.data.userId;\n          //alert(payload);\n          //console.log(payload.friendList);\n          //let fList = [];\n          //fList = payload.friendList;\n          //console.log();\n          //payload.friendList = payload.friendList.slice(0, response.data.listLength);\n          //dispatch(\"updateFriendList\", { userId: payload });\n          //commit(\"setFriendList\", fList);\n          //console.log(fList);\n          //commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    async updateFriendList({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      await axios\n        .post(\"http://localhost:3000/user/updateFriendList\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response.data);\n\n          payload = response.data;\n          //console.log(payload.friendList);\n          let fList = [];\n          fList = payload.friendList;\n          console.log();\n          //payload.friendList = payload.friendList.slice(0, response.data.listLength);\n\n          commit(\"setFriendList\", fList);\n          console.log(fList);\n          //commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n\n    reqAccepted({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/user/reqAccepted\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n\n          //console.log(response.data);\n          payload = response.data;\n          //commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n    async deleteFriend({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      await axios\n        .post(\"http://localhost:3000/user/deleteFriend\", payload)\n        .then(response => {\n          //console.log(\"##Payload CreateROOM##\");\n          //console.log(payload);\n          //console.log(\"##Payload CREATEROOM##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response.data);\n\n          payload = response.data;\n\n          //console.log(fList);\n          //commit(\"setFriend\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"Room Cant be created\");\n        });\n    },\n\n    leaveRoom({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/rooms/leaveRoom\", payload)\n        .then(response => {\n          //console.log(\"##Leave Room##\");\n          //console.log(payload);\n          //console.log(\"##Leave Room##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response);\n          payload = response.data;\n          commit(\"setRoom\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"User cant left the room\");\n        });\n    },\n    userKicked({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/rooms/leaveRoom\", payload)\n        .then(response => {\n          //console.log(\"##Leave Room##\");\n          //console.log(payload);\n          //console.log(\"##Leave Room##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          console.log(response);\n          //payload = response.data;\n          //commit(\"setRoom\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"User cant left the room\");\n        });\n    },\n    leaveRoomLogout({ dispatch, commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/rooms/leaveRoom\", payload)\n        .then(response => {\n          //console.log(\"##Leave Room##\");\n          //console.log(payload);\n          //console.log(\"##Leave Room##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response);\n          payload = response.data;\n          commit(\"setRoom\", payload);\n          dispatch(\"logOutUserUp\");\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"User cant left the room\");\n        });\n    },\n    roomClear({ commit }, payload) {\n      commit(\"setLoading\", true);\n      commit(\"setNotification\", false);\n      axios.defaults.headers.common[\"Authorization\"] =\n        \"Bearer \" + Cookies.get(ltoken);\n      axios\n        .post(\"http://localhost:3000/rooms/roomDelete\", payload)\n        .then(response => {\n          //console.log(\"##Leave Room##\");\n          //console.log(payload);\n          //console.log(\"##Leave Room##\");\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", true);\n          commit(\"clearError\");\n          //console.log(response);\n          payload = response.data;\n          //commit(\"setRoom\", payload);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setNotification\", false);\n          //console.log(payload);\n          commit(\"setError\", error);\n          //console.log(\"User cant left the room\");\n        });\n    },\n    clearError({ commit }) {\n      commit(\"clearError\");\n    },\n    unsetUser({ commit }) {\n      commit(\"setUser\", null);\n    },\n    unsetFriend({ commit }) {\n      commit(\"setFriend\", null);\n    },\n    unsetRoom({ commit }) {\n      commit(\"setRoom\", null);\n    },\n    clearNotification({ commit }) {\n      commit(\"clearNotification\");\n    }\n  },\n  getters: {\n    user(state) {\n      return state.User;\n    },\n    friendsList(state) {\n      return state.FriendList;\n    },\n    userFriends(state) {\n      return state.Friend;\n    },\n    userProfile(state) {\n      return state.userProfile;\n    },\n    room(state) {\n      return state.Room;\n    },\n    loading(state) {\n      return state.loading;\n    },\n    error(state) {\n      console.log(\"##########Error####### \" + state.error);\n      return state.error;\n    },\n    notify(state) {\n      return state.notify;\n    }\n  }\n});\n"]}]}